@{;
    ViewBag.Title = "列表页面";
    Layout = "~/Views/Shared/_Index.cshtml";
}
<script>
    //定义将Date对象转换为字符串函数
    function timeToString(timeObj) {
        var str = "";
        var year = timeObj.getFullYear();
        var month = timeObj.getMonth();
        var date = timeObj.getDate();
        var time = timeObj.toTimeString().split(" ")[0];
        var rex = new RegExp(/:/g);
        str = year + "-" + month + "-" + date + " " + time.replace(rex, ":");
        console.log("------当前日期：" + str);
        return str;
    }

    //定义通过时间戳转换为字符串函数
    function timeToObj(mstime) {
        var d = new Date();
        d.setTime(mstime);
        timeToString(d);
    }

    //字符串转日期格式，strDate要转为日期格式的字符串
    function getDate(strDate, day) {
        var date = eval('new Date(' + strDate.replace(/\d+(?=-[^-]+$)/,
            function (a) { return parseInt(a, 10) - 1; }).match(/\d+/g) + ')');
        var date = date.setDate(date.getDate() + day);
        return toTimestr(date);
    }
    //定义通过时间戳转换为字符串函数
    function toTimestr(time_stamp) {
        const time = new Date(time_stamp);// * 1000);
        const Y = time.getFullYear()
        const M = (time.getMonth() + 1).toString().padStart(2, '0')
        const D = time.getDate().toString().padStart(2, '0')
        const h = time.getHours().toString().padStart(2, '0')
        const m = time.getMinutes().toString().padStart(2, '0')
        const s = time.getSeconds().toString().padStart(2, '0')
        return `${Y}-${M}-${D} ${h}:${m}:${s}`
    }

    $(function () {
        InitialPage();
        GetGrid();
    });
    //初始化页面
    function InitialPage() {
        //resize重设布局;
        $(window).resize(function (e) {
            window.setTimeout(function () {
                $('#gridTable').setGridWidth(($('.gridPanel').width()));
                $('#gridTable').setGridHeight($(window).height() - 136.5);
            }, 200);
            e.stopPropagation();
        });
    }
    //加载表格
    function GetGrid() {
        var selectedRowIndex = 0;
        var queryJson = {};
        queryJson.OverMark = 1;//完成的才显示出来

        var $gridTable = $('#gridTable');
        $gridTable.jqGrid({
            autowidth: true,
            postData: { queryJson: JSON.stringify(queryJson) },
            height: $(window).height() - 156.5,
            url: "../../CustomerManage/Sale_Customer/GetPageListJson",
            datatype: "json",
            colModel: [
                { label: '主键', name: 'ProduceId', index: 'ProduceId', width: 80, align: '', sortable: true, hidden: true },
                { label: '销售单主键', name: 'OrderId', index: 'OrderId', width: 80, align: '', sortable: true, hidden: true },
                { label: '单号', name: 'ProduceCode', index: 'ProduceCode', width: 130, align: '', sortable: true },
                { label: '标题', name: 'OrderTitle', index: 'OrderTitle', width: 180, align: 'left', sortable: true },
                //{ label: '销售单', name: 'OrderCode', index: 'OrderCode', width: 130, align: '', sortable: true },
                {
                    label: '订单类型', name: 'OrderType', index: 'OrderType', width: 80, align: 'center', sortable: true,
                    formatter: function (cellvalue, options, rowObject) {
                        if (cellvalue == 4) {
                            return "<span style='color:red'>" + top.clientdataItem["OrderType"][cellvalue] + "</span>";
                        }
                        else {
                            return top.clientdataItem["OrderType"][cellvalue];
                        }
                    }
                },
                { label: '经销商', name: 'CompanyName', index: 'CompanyName', width: 130, align: 'center', sortable: true },
                { label: '客户', name: 'CustomerName', index: 'CustomerName', width: 130, align: 'center', sortable: true },
                { label: '销售人', name: 'SalesmanUserName', index: 'SalesmanUserName', width: 80, align: 'center', sortable: true },
                { label: '收款确认', name: 'CreateDate', index: 'CreateDate', width: 100, align: '', sortable: true, formatter: "date", formatoptions: { srcformat: 'Y-m-d', newformat: 'Y-m-d' } },
                {
                    label: "报价审核", name: "MoneyOkMark", index: "MoneyOkMark", width: 60, align: "center", sortable: false,
                    formatter: function (cellvalue) {
                        if (cellvalue >= 1) {
                            return "<i class=\"fa fa-toggle-on\"></i>";
                        } else if (cellvalue == -1) {
                            return "<span style='color:red'>驳回</span>";
                        } else {
                            return "<i class=\"fa fa-toggle-off\"></i>";
                        }
                    }
                },
                { label: '报价审核日期', name: 'MoneyOkDate', index: 'MoneyOkDate', width: 118, align: 'left', sortable: true },
                {
                    label: "下单", name: "DownMark", index: "DownMark", width: 60, align: "center", sortable: false,
                    formatter: function (cellvalue) {
                        if (cellvalue >= 1) {
                            return "<i class=\"fa fa-toggle-on\"></i>";
                        } else if (cellvalue == -1) {
                            return "<span style='color:red'>驳回</span>";
                        } else {
                            return "<i class=\"fa fa-toggle-off\"></i>";
                        }
                    }
                },
                { label: '下单人', name: 'DownUserName', index: 'DownUserName', width: 80, align: 'center', sortable: true },
                { label: '下单时间', name: 'DownDate', index: 'DownDate', width: 100, align: '', sortable: true, formatter: "date", formatoptions: { srcformat: 'Y-m-d', newformat: 'Y-m-d' } },
                {
                    label: "推单", name: "PushMark", index: "PushMark", width: 60, align: "center", sortable: false,
                    formatter: function (cellvalue) {
                        if (cellvalue >= 1) {
                            return "<i class=\"fa fa-toggle-on\"></i>";
                        } else if (cellvalue == -1) {
                            return "<span style='color:red'>撤单</span>";
                        } else {
                            return "<i class=\"fa fa-toggle-off\"></i>";
                        }
                    }
                },
                { label: '推单人', name: 'PushUserName', index: 'PushUserName', width: 80, align: 'center', sortable: true },
                { label: '推单时间', name: 'PushDate', index: 'PushDate', width: 100, align: '', sortable: true, formatter: "date", formatoptions: { srcformat: 'Y-m-d', newformat: 'Y-m-d' } },
                { label: '最迟交付', name: 'EndDate', index: 'EndDate', width: 80, align: '', sortable: true, formatter: "date", formatoptions: { srcformat: 'Y-m-d', newformat: 'Y-m-d' },
                    formatter: function (cellvalue, options, rowObject) {
                        if (cellvalue!=null) {
                            if (getDate(cellvalue,1) < "@DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss")") {
                                return "<span style='color:red'>" + cellvalue + "</span>";
                            } else {
                                return cellvalue;
                            }
                        } else {
                            return "";
                        }
                    }
                },
                { label: '总面积', name: 'SumTotalArea', index: 'SumTotalArea', width: 80, align: 'center', sortable: true },
                { label: '总数量', name: 'SumTotalCount', index: 'SumTotalCount', width: 80, align: 'center', sortable: true },              
                { label: '计划开始', name: 'StatePlanDate', index: 'StatePlanDate', width: 80, align: '', sortable: true, formatter: "date", formatoptions: { srcformat: 'Y-m-d', newformat: 'Y-m-d' },
                    formatter: function (cellvalue, options, rowObject) {
                        if (cellvalue!=null) {
                            if (getDate(cellvalue, 1) < "@DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss")" && (rowObject.KaiLiaoMark != 2 && rowObject.FengBianMark != 2 && rowObject.PaiZuanMark != 2 && rowObject.ShiZhuangMark != 2 && rowObject.BaoZhuangMark != 2)) {
                                return "<span style='color:red'>" + cellvalue + "</span>";
                            } else {
                                return cellvalue;
                            }
                        } else {
                            return "";
                        }
                    }
                },
                { label: '计划结束', name: 'EndPlanDate', index: 'EndPlanDate', width: 80, align: '', sortable: true, formatter: "date", formatoptions: { srcformat: 'Y-m-d', newformat: 'Y-m-d' },
                    formatter: function (cellvalue, options, rowObject) {
                        if (cellvalue!=null) {
                            if (getDate(cellvalue, 1) < "@DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss")") {
                                return "<span style='color:red'>" + cellvalue + "</span>";
                            } else {
                                return cellvalue;
                            }
                        } else {
                            return "";
                        }
                    }
                },

                {
                    label: "开料", name: "KaiLiaoMark", index: "KaiLiaoMark", width: 50, align: "center",
                    formatter: function (cellvalue, options, rowObject) {
                        if (cellvalue == 2) {
                            return "<i class=\"fa fa-toggle-on\"></i>";
                        } else if (cellvalue == 1) {
                            return "<i class=\"fa fa-toggle-off\"></i>";
                        } else {
                            return "";
                        }
                    }
                },
                { label: '开料人', name: 'KaiLiaoUserName', index: 'KaiLiaoUserName', width: 80, align: 'center', sortable: true },
                {
                    label: '开料日期', name: 'KaiLiaoDate', index: 'KaiLiaoDate', width: 118, align: 'left', sortable: true,
                    formatter: function (cellvalue, options, rowObject) {
                        if (cellvalue!=null) {
                            if (getDate(cellvalue, 2) < "@DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss")" && rowObject.FengBianMark!=2) {
                                return "<span style='color:red'>" + cellvalue + "</span>";
                            } else {
                                return cellvalue;
                            }
                        } else {
                            return "";
                        }
                    }
                },
                {
                    label: "封边", name: "FengBianMark", index: "FengBianMark", width: 50, align: "center",
                    formatter: function (cellvalue, options, rowObject) {
                        if (cellvalue == 2) {
                            return "<i class=\"fa fa-toggle-on\"></i>";
                        } else if (cellvalue == 1) {
                            return "<i class=\"fa fa-toggle-off\"></i>";
                        } else {
                            return "";
                        }
                    }
                },
                { label: '封边人', name: 'FengBianUserName', index: 'FengBianUserName', width: 80, align: 'center', sortable: true },
                { label: '封边日期', name: 'FengBianDate', index: 'FengBianDate', width: 118, align: 'left', sortable: true,
                    formatter: function (cellvalue, options, rowObject) {
                        if (cellvalue!=null) {
                            if (getDate(cellvalue, 2) < "@DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss")" && rowObject.PaiZuanMark!=2) {
                                return "<span style='color:red'>" + cellvalue + "</span>";
                            } else {
                                return cellvalue;
                            }
                        } else {
                            return "";
                        }
                    }
                },
                {
                    label: "排钻", name: "PaiZuanMark", index: "PaiZuanMark", width: 50, align: "center",
                    formatter: function (cellvalue, options, rowObject) {
                        if (cellvalue == 2) {
                            return "<i class=\"fa fa-toggle-on\"></i>";
                        } else if (cellvalue == 1) {
                            return "<i class=\"fa fa-toggle-off\"></i>";
                        } else {
                            return "";
                        }
                    }
                },
                { label: '排钻人', name: 'PaiZuanUserName', index: 'PaiZuanUserName', width: 80, align: 'center', sortable: true },
                { label: '排钻日期', name: 'PaiZuanDate', index: 'PaiZuanDate', width: 118, align: 'left', sortable: true,
                    formatter: function (cellvalue, options, rowObject) {
                        if (cellvalue!=null) {
                            if (getDate(cellvalue, 2) < "@DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss")" && rowObject.ShiZhuangMark!=2) {
                                return "<span style='color:red'>" + cellvalue + "</span>";
                            } else {
                                return cellvalue;
                            }
                        } else {
                            return "";
                        }
                    }
                },
                {
                    label: "试装", name: "ShiZhuangMark", index: "ShiZhuangMark", width: 50, align: "center",
                    formatter: function (cellvalue, options, rowObject) {
                        if (cellvalue == 2) {
                            return "<i class=\"fa fa-toggle-on\"></i>";
                        } else if (cellvalue == 1) {
                            return "<i class=\"fa fa-toggle-off\"></i>";
                        } else {
                            return "";
                        }
                    }
                },
                { label: '试装人', name: 'ShiZhuangUserName', index: 'ShiZhuangUserName', width: 80, align: 'center', sortable: true },
                { label: '试装日期', name: 'ShiZhuangDate', index: 'ShiZhuangDate', width: 118, align: 'left', sortable: true,
                    formatter: function (cellvalue, options, rowObject) {
                        if (cellvalue!=null) {
                            if (getDate(cellvalue, 2) < "@DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss")" && rowObject.BaoZhuangMark!=2) {
                                return "<span style='color:red'>" + cellvalue + "</span>";
                            } else {
                                return cellvalue;
                            }
                        } else {
                            return "";
                        }
                    }
                },
                {
                    label: "包装", name: "BaoZhuangMark", index: "BaoZhuangMark", width: 50, align: "center",
                    formatter: function (cellvalue, options, rowObject) {
                        if (cellvalue == 2) {
                            return "<i class=\"fa fa-toggle-on\"></i>";
                        } else if (cellvalue == 1) {
                            return "<i class=\"fa fa-toggle-off\"></i>";
                        } else {
                            return "";
                        }
                    }
                },
                { label: '包装人', name: 'BaoZhuangUserName', index: 'BaoZhuangUserName', width: 80, align: 'center', sortable: true },
                { label: '包装日期', name: 'BaoZhuangDate', index: 'BaoZhuangDate', width: 118, align: 'left', sortable: true},
                //{
                //    label: "吸塑", name: "XiSuMark", index: "XiSuMark", width: 50, align: "center",
                //    formatter: function (cellvalue, options, rowObject) {
                //        if (cellvalue == 2) {
                //            return "<i class=\"fa fa-toggle-on\"></i>";
                //        } else if (cellvalue == 1) {
                //            return "<i class=\"fa fa-toggle-off\"></i>";
                //        } else {
                //            return "";
                //        }
                //    }
                //},
                //{ label: '吸塑人', name: 'XiSuUserName', index: 'XiSuUserName', width: 80, align: 'center', sortable: true },
                //{ label: '吸塑日期', name: 'XiSuDate', index: 'XiSuDate', width: 118, align: 'left', sortable: true },
                {
                    label: "入库", name: "EnterMark", index: "EnterMark", width: 60, align: "center", sortable: false,
                    formatter: function (cellvalue) {
                        return cellvalue == 1 ? "<i class=\"fa fa-toggle-on\"></i>" : "<i class=\"fa fa-toggle-off\"></i>";
                    }
                },
                { label: '入库日期', name: 'EnterDate', index: 'EnterDate', width: 118, align: 'left', sortable: true },
                {
                    label: "发货", name: "SendMark", index: "SendMark", width: 60, align: "center", sortable: false,
                    formatter: function (cellvalue) {
                        return cellvalue == 1 ? "<i class=\"fa fa-toggle-on\"></i>" : "<i class=\"fa fa-toggle-off\"></i>";
                    }
                },
                { label: '发货日期', name: 'SendDate', index: 'SendDate', width: 118, align: 'left', sortable: true },

            ],
            viewrecords: true,
            rowNum: 30,
            rowList: [30, 50, 100],
            pager: "#gridPager",
            sortname: 'CreateDate',
            sortorder: 'desc',
            rownumbers: true,
            shrinkToFit: false,
            gridview: true,
            onSelectRow: function () {
                selectedRowIndex = $('#' + this.id).getGridParam('selrow');
            },
            gridComplete: function () {
                $('#' + this.id).setSelection(selectedRowIndex, false);
            },
            footerrow: true,
            gridComplete: function () {
                var total1 = $(this).getCol("SumTotalArea", false, "sum");
                var total2 = $(this).getCol("SumTotalCount", false, "sum");
                var total3 = $(this).getCol("SumEndCount", false, "sum");
                var total4 = $(this).getCol("SumYuCount", false, "sum");
                //合计面积
                $(this).footerData("set", {
                    "location": "合计：",
                    "SumTotalArea": total1,
                    "SumTotalCount": total2,
                    "SumEndCount": total3,
                    "SumYuCount": total4,
                });
                $('table.ui-jqgrid-ftable td').prevUntil().css("border-right-color", "#fff");
            },
            subGrid: true,
            subGridRowExpanded: function (subgrid_id, row_id) {
                var keyValue = $gridTable.jqGrid('getRowData', row_id)['ProduceId'];
                var subgrid_table_id = subgrid_id + "_t";
                $("#" + subgrid_id).html("<table id='" + subgrid_table_id + "'></table>");
                $("#" + subgrid_table_id).jqGrid({
                    url: "../../CustomerManage/Sale_Customer/GetDetailsJson",
                    postData: { keyValue: keyValue },
                    datatype: "json",
                    height: "100%",
                    colModel: [
                        { label: '统计子表Id', name: 'Id', index: 'Id', width: 80, align: '',sortable: true ,hidden: true },
                        { label: '生产Id', name: 'MainId', index: 'MainId', width: 80, align: '', sortable: true, hidden: true },
                        { label: '产品Id', name: 'ProductId', index: 'ProductId', width: 80, align: '',sortable: true ,hidden: true },
                        { label: '产品单', name: 'ProductCode', index: 'ProductCode', width: 80, align: '',sortable: true  },
                        { label: '产品名称', name: 'ProductName', index: 'ProductName', width: 220, align: '',sortable: true  },
                        { label: '小计面积', name: 'SumArea', index: 'SumArea', width: 80, align: '',sortable: true  },
                        { label: '小计块数', name: 'SumCount', index: 'SumCount', width: 80, align: '', sortable: true },
                        { label: '工序', name: 'Step', index: 'Step', width: 80, align: '', sortable: true },
                        { label: '完工数量', name: 'EndCount', index: 'EndCount', width: 80, align: '', sortable: true },
                        { label: '剩余数量', name: 'YuCount', index: 'YuCount', width: 80, align: '',sortable: true  },
                        { label: '描述', name: 'Description', index: 'Description', width: 80, align: '',sortable: true  },
                    ],
                    caption: "用料明细",
                    rowNum: "1000",
                    rownumbers: true,
                    shrinkToFit: false,
                    gridview: true,
                    hidegrid: false
                });
            }
        });
        //点击时间范围（今天、近7天、近一个月、近三个月）
        $("#time_horizon a.btn-default").click(function () {
            $("#time_horizon a.btn-default").removeClass("active");
            $(this).addClass("active");
            switch ($(this).attr('data-value')) {
                case "1"://今天
                    $("#StartTime").val("@DateTime.Now.ToString("yyyy-MM-dd")");
                    $("#EndTime").val("@DateTime.Now.ToString("yyyy-MM-dd")");
                    break;
                case "2"://近7天
                    $("#StartTime").val("@DateTime.Now.AddDays(-7).ToString("yyyy-MM-dd")");
                    $("#EndTime").val("@DateTime.Now.ToString("yyyy-MM-dd")");
                    break;
                case "3"://近一个月
                    $("#StartTime").val("@DateTime.Now.AddMonths(-1).ToString("yyyy-MM-dd")");
                    $("#EndTime").val("@DateTime.Now.ToString("yyyy-MM-dd")");
                    break;
                case "4"://近三个月
                    $("#StartTime").val("@DateTime.Now.AddMonths(-3).ToString("yyyy-MM-dd")");
                    $("#EndTime").val("@DateTime.Now.ToString("yyyy-MM-dd")");
                    break;
                default:
                    break;
            }
            $("#SelectedStartTime").html($("#StartTime").val());
            $("#SelectedEndTime").html($("#EndTime").val());
            $('#btn_Search').trigger("click");
        });
        //查询点击事件
        $("#btn_Search").click(function () {
            if (!$(".ui-filter-text").next('.ui-filter-list').is(":hidden")) {
                $(".ui-filter-text").trigger("click");
            }
            $("#SelectedStartTime").html($("#StartTime").val());
            $("#SelectedEndTime").html($("#EndTime").val());
            var queryJson = $("#filter-form").GetWebControls();
            $gridTable.jqGrid('setGridParam', {
                postData: { queryJson: JSON.stringify(queryJson) },
                page: 1
            }).trigger('reloadGrid');
        });
    }
    //新增
    function btn_add() {
        top.tablist.newTab({
            id: "OrderForm",
            title: "新增生产单",
            closed: true,
            replace: true,
            icon: "fa fa-file-text-o",
            url: top.contentPath + '/CustomerManage/Sale_Customer/Sale_CustomerForm',
        });
    }
    //编辑
    function btn_edit() {
        var keyValue = $("#gridTable").jqGridRowValue('ProduceId');
            if (checkedRow(keyValue)) {
                top.tablist.newTab({
                    id: "OrderForm",
                    title: "编辑生产单",
                    closed: true,
                    replace: true,
                    icon: "fa fa-file-text-o",
                    url: top.contentPath + '/CustomerManage/Sale_Customer/Sale_CustomerForm?keyValue=' + keyValue,
                });
            }
    }
    //删除
    function btn_delete() {
        var keyValue = $('#gridTable').jqGridRowValue('ProduceId');
        if (keyValue) {
            $.RemoveForm({
                url: '../../CustomerManage/Sale_Customer/RemoveForm',
                param: { keyValue: keyValue },
                success: function (data) {
                    $('#gridTable').trigger('reloadGrid');
                }
            })
        } else {
            dialogMsg('请选择需要删除的生产单！', 0);
        }
    }
    //导出
    function btn_export() {
        dialogOpen({
            id: "ExcelIExportDialog",
            title: '导出生产单',
            url: '/Utility/ExcelExportForm?gridId=gridTable&filename=生产单',
            width: "500px",
            height: "380px",
            callBack: function (iframeId) {
                top.frames[iframeId].AcceptClick();
            }, btn: ['导出Excel', '关闭']
        });
    }
    //详细
    function btn_detail() {
        var keyValue = $("#gridTable").jqGridRowValue('ProduceId');
        if (checkedRow(keyValue)) {
            top.tablist.newTab({
                id: "OrderForm",
                title: "订单详细",
                closed: true,
                replace: true,
                icon: "fa fa-file-text-o",
                url: top.contentPath + "/CustomerManage/Sale_Customer/Detail?keyValue=" + keyValue
            });
        }
    }

    //推单
    function btn_push() {
        var keyValue = $("#gridTable").jqGridRowValue('ProduceId');
        var orderId = $("#gridTable").jqGridRowValue('OrderId');
        if (checkedRow(keyValue)) {
            $.ConfirmAjax({
                msg: "注：您确定【推单】吗？",
                url: "../../CustomerManage/Sale_Customer/UpdatePushState",
                param: { keyValue: keyValue, state: 1, orderId: orderId },
                success: function (data) {
                    $("#gridTable").trigger("reloadGrid");
                }
            })
        }
    }
    ////撤单
    //function btn_back() {
    //    var keyValue = $("#gridTable").jqGridRowValue('ProduceId');
    //    var orderId = $("#gridTable").jqGridRowValue('OrderId');
    //    if (checkedRow(keyValue)) {
    //        $.ConfirmAjax({
    //            msg: "注：您确定【撤单】吗？",
    //            url: "../../CustomerManage/Sale_Customer/UpdatePushState",
    //            param: { keyValue: keyValue, state: -1, orderId: orderId },
    //            success: function (data) {
    //                $("#gridTable").trigger("reloadGrid");
    //            }
    //        })
    //    }
    //}



    //撤单
    function btn_back() {
        var keyValue = $('#gridTable').jqGridRowValue('ProduceId');
        if (checkedRow(keyValue)) {
            dialogOpen({
                id: 'BackForm',
                title: '撤单',
                url: '/CustomerManage/Sale_Customer/OrderPushBackForm?keyValue=' + keyValue,
                width: '650px',
                height: '350px',
                callBack: function (iframeId) {
                    top.frames[iframeId].AcceptClick();
                }
            })
        }
    }
</script>
<div class="titlePanel">
    <div class="title-search">
        <table>
            <tr>
                <td>查询条件</td>
                <td style="padding-left: 10px;">
                    <div class="ui-filter" style="width: 200px;">
                        <div class="ui-filter-text">
                            <strong id="SelectedStartTime">@DateTime.Now.AddMonths(-1).ToString("yyyy-MM-dd")</strong> 至 <strong id="SelectedEndTime">@DateTime.Now.ToString("yyyy-MM-dd")</strong>
                        </div>
                        <div class="ui-filter-list" style="width: 350px;">
                            <table class="form" id="filter-form">
                                <tr>
                                    <th class="formTitle">销售日期：</th>
                                    <td class="formValue">
                                        <div style="float: left; width: 45%;">
                                            <input id="StartTime" readonly type="text" value="@DateTime.Now.AddMonths(-1).ToString("yyyy-MM-dd")" class="form-control input-wdatepicker" onfocus="WdatePicker({maxDate:'%y-%M-%d'})">
                                        </div>
                                        <div style="float: left; width: 10%; text-align: center;">至</div>
                                        <div style="float: left; width: 45%;">
                                            <input id="EndTime" readonly type="text" value="@HZSoft.Util.Time.GetToday()" class="form-control input-wdatepicker" onfocus="WdatePicker()">
                                        </div>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="formTitle">销售单：</td>
                                    <td class="formValue">
                                        <input id="OrderCode" type="text" class="form-control">
                                    </td>
                                </tr>
                                <tr>
                                    <td class="formTitle">生产单：</td>
                                    <td class="formValue">
                                        <input id="ProduceId" type="text" class="form-control">
                                    </td>
                                </tr>
                                <tr>
                                    <td class="formTitle">客户：</td>
                                    <td class="formValue">
                                        <input id="CustomerName" type="text" class="form-control">
                                    </td>
                                </tr>
                                <tr>
                                    <td class="formTitle">销售人：</td>
                                    <td class="formValue">
                                        <input id="SalesmanUserName" type="text" class="form-control">
                                    </td>
                                </tr>
                                <tr>
                                    <td class="formTitle">生产人员：</td>
                                    <td class="formValue">
                                        <input id="StepUserName" type="text" class="form-control">
                                    </td>
                                </tr>
                            </table>
                            <div class="ui-filter-list-bottom">
                                <a id="btn_Search" class="btn btn-primary">&nbsp;查&nbsp;&nbsp;询</a>
                            </div>
                        </div>
                    </div>
                </td>
                <td style="padding-left: 10px;">
                    <div id="time_horizon" class="btn-group">
                        <a class="btn btn-default" data-value="1">今天</a>
                        <a class="btn btn-default" data-value="2">近7天</a>
                        <a class="btn btn-default active" data-value="3">近1个月</a>
                        <a class="btn btn-default" data-value="4">近3个月</a>
                    </div>
                </td>
            </tr>
        </table>
    </div>
    <div class="toolbar">
        <div class="btn-group">
            <a id="lr-replace" class="btn btn-default" onclick="reload()"><i class="fa fa-refresh"></i>刷新</a>
            @*<a id="lr-edit" class="btn btn-default" onclick="btn_push()"><i class="fa fa-arrow-circle-right"></i>&nbsp;推单</a>
        <a id="lr-back" class="btn btn-default" onclick="btn_back()"><i class="fa fa-reply"></i>&nbsp;撤单</a>*@
            <a id="lr-detail" class="btn btn-default" onclick="btn_detail()"><i class="fa fa-list-alt"></i>&nbsp;详细</a>
            <a id="lr-export" class="btn btn-default" onclick="btn_export()"><i class="fa fa-sign-out"></i>&nbsp;导出</a>
        </div>
    </div>
</div>
<div class="gridPanel">
    <table id="gridTable"></table>
    <div id="gridPager"></div>
</div>
